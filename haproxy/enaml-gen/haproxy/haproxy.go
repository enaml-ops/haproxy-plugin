package haproxy 
/*
* File Generated by enaml generator
* !!! Please do not edit this file !!!
*/
type HaProxy struct {

	/*LogLevel - Descr: Log level Default: info
*/
	LogLevel interface{} `yaml:"log_level,omitempty"`

	/*RequestTimeout - Descr: Maximum HTTP request length (in seconds) Default: 30
*/
	RequestTimeout interface{} `yaml:"request_timeout,omitempty"`

	/*SslCiphers - Descr: List of SSL Ciphers that are passed to HAProxy Default: ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:ECDHE-RSA-RC4-SHA:ECDHE-ECDSA-RC4-SHA:AES128:AES256:RC4-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!3DES:!MD5:!PSK
*/
	SslCiphers interface{} `yaml:"ssl_ciphers,omitempty"`

	/*KeepaliveTimeout - Descr: Timeout waiting for new HTTP requests under http keep-alive mode (in seconds) Default: 1
*/
	KeepaliveTimeout interface{} `yaml:"keepalive_timeout,omitempty"`

	/*Enable4443 - Descr: Enables port 4443 for backwards compatibility with WSS-based apps using the old CF haproxy Default: false
*/
	Enable4443 interface{} `yaml:"enable_4443,omitempty"`

	/*WebsocketTimeout - Descr: Timeout for websocket/tunnel traffic (in seconds) Default: 3600
*/
	WebsocketTimeout interface{} `yaml:"websocket_timeout,omitempty"`

	/*Headers - Descr: Hash of custom headers you wish you have set on each request. Spaces are automatically escaped, but any other haproxy delimiters will need to be escaped manually Default: <nil>
*/
	Headers interface{} `yaml:"headers,omitempty"`

	/*ServerTimeout - Descr: Timeout waiting for data from a server (in seconds) Default: 30
*/
	ServerTimeout interface{} `yaml:"server_timeout,omitempty"`

	/*StatsPassword - Descr: Password to authenticate haproxy stats Default: <nil>
*/
	StatsPassword interface{} `yaml:"stats_password,omitempty"`

	/*Resolvers - Descr: List of DNS servers Default: <nil>
*/
	Resolvers interface{} `yaml:"resolvers,omitempty"`

	/*BackendServers - Descr: Array of the router IPs acting as the HTTP/TCP backends (should include servers all Availability Zones being used) Default: []
*/
	BackendServers interface{} `yaml:"backend_servers,omitempty"`

	/*HttpsRedirectDomains - Descr: For each domain in this array, a HTTPS redirect rule will be put in the config file. Redirect will be applied for all subdomains Default: []
*/
	HttpsRedirectDomains interface{} `yaml:"https_redirect_domains,omitempty"`

	/*StatsUri - Descr: URI used to access the stats UI. Default: haproxy_stats
*/
	StatsUri interface{} `yaml:"stats_uri,omitempty"`

	/*DnsHold - Descr: DNS Hold time Default: 10s
*/
	DnsHold interface{} `yaml:"dns_hold,omitempty"`

	/*AcceptProxy - Descr: Allow accept proxy Default: false
*/
	AcceptProxy interface{} `yaml:"accept_proxy,omitempty"`

	/*SslPem - Descr: SSL certificate (PEM file), or an array of SSL certificates (PEM files) Default: <nil>
*/
	SslPem interface{} `yaml:"ssl_pem,omitempty"`

	/*DisableHttp - Descr: Disable port 80 traffic Default: false
*/
	DisableHttp interface{} `yaml:"disable_http,omitempty"`

	/*RoutedBackendServers - Descr: Hash of the URL prefixes -> array of the router IPs acting as the HTTP/TCP backends (should include servers all Availability Zones being used) Default: map[]
*/
	RoutedBackendServers interface{} `yaml:"routed_backend_servers,omitempty"`

	/*DefaultDhParam - Descr: Maximum size of DH params when generating epmehmeral keys during key exchange Default: 2048
*/
	DefaultDhParam interface{} `yaml:"default_dh_param,omitempty"`

	/*HttpsRedirectAll - Descr: If this is set to 'true', a https redirect rule for all http calls will be put in the config file Default: false
*/
	HttpsRedirectAll interface{} `yaml:"https_redirect_all,omitempty"`

	/*QueueTimeout - Descr: Timeout for requests queued waiting for free connection slots (in seconds) Default: 30
*/
	QueueTimeout interface{} `yaml:"queue_timeout,omitempty"`

	/*StatsUser - Descr: User name to authenticate haproxy stats Default: <nil>
*/
	StatsUser interface{} `yaml:"stats_user,omitempty"`

	/*SyslogServer - Descr: An IPv4 address optionally followed by a colon and a UDP port. It can also be an IPv6 address or filesystem path to a UNIX domain socket. Default: 127.0.0.1
*/
	SyslogServer interface{} `yaml:"syslog_server,omitempty"`

	/*StatsEnable - Descr: If true, haproxy will enable a socket for stats. You can see the stats on haproxy_ip:9000/haproxy_stats Default: false
*/
	StatsEnable interface{} `yaml:"stats_enable,omitempty"`

	/*TrustedDomainCidrs - Descr: Space separated trusted cidr blocks for internal_only_domains Default: 0.0.0.0/32
*/
	TrustedDomainCidrs interface{} `yaml:"trusted_domain_cidrs,omitempty"`

	/*InternalOnlyDomains - Descr: Array of domains for internal-only apps/services (not hostnames for the apps/services) Default: []
*/
	InternalOnlyDomains interface{} `yaml:"internal_only_domains,omitempty"`

	/*ConnectTimeout - Descr: Timeout waiting for connections to establish to a server (in seconds) Default: 5
*/
	ConnectTimeout interface{} `yaml:"connect_timeout,omitempty"`

	/*ClientTimeout - Descr: Timeout waiting for data from a client (in seconds) Default: 30
*/
	ClientTimeout interface{} `yaml:"client_timeout,omitempty"`

	/*RspHeaders - Descr: Hash of custom headers you wish you have set on each request. Spaces are automatically escaped, but any other haproxy delimiters will need to be escaped manually Default: <nil>
*/
	RspHeaders interface{} `yaml:"rsp_headers,omitempty"`

	/*TrustedStatsCidrs - Descr: Trusted ip range that can access the stats UI Default: 0.0.0.0/32
*/
	TrustedStatsCidrs interface{} `yaml:"trusted_stats_cidrs,omitempty"`

	/*BackendPort - Descr: Listening port for Router Default: 80
*/
	BackendPort interface{} `yaml:"backend_port,omitempty"`

	/*CompressTypes - Descr: If this property is set, gzip compression will be activated for the mime types named in this property. definition like 'text/html text/plain text/css' Default: 
*/
	CompressTypes interface{} `yaml:"compress_types,omitempty"`

	/*Tcp - Descr: List of mappings to perform tcp-based proxying on. See example for mapping datastructure and keys Default: []
*/
	Tcp interface{} `yaml:"tcp,omitempty"`

}